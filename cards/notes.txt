# Setup for game and player
        # Attempt to pull game from cache based on cookie. If not, create game.
        
        if not self.request.session.get('game_name') or not self.request.session.get('player_name'):
            return redirect(reverse('lobby-view'))
        #     self.game_data = self.create_game(self.game_name)
        #     self.request.session['game_name'] = self.game_name
        # else:
        #     try:
        #         self.game_data = cache.get('games').get(self.game_name)
        #     except AttributeError:
        #         self.game_data = self.create_game(self.game_name)
        self.game_name = self.request.session.get('game_name')
        self.player_name = self.request.session.get('player_name')

        self.game_data = cache.get('games').get(self.game_name)
        self.player_data = self.game_data['players'].get(self.player_name)
        # Attempt to pull player from cache, if not create.
        # if not self.request.session.get('player_name'):
        #     redirect(reverse('lobby-view'))
        #     self.player_data = self.create_player(self.player_name)
        #     self.game_data['players'][self.player_name] = self.player_data
        # else:
        #     self.player_data = self.game_data.get('players')
        #     if self.player_data:
        #         self.player_data = self.player_data.get(self.player_name)
        #     else:
        #         self.player_data = self.create_player(self.player_name)
        #         self.game_data['players'][self.player_name] = self.player_data

        # Deal hand if player doesn't have one.
        # print self.player_data
        # if not self.player_data['hand']:
        #     self.player_data['hand'] = [
        #         self.game_data['white_deck'].pop() for x in xrange(10)
        #     ]

        # # Deal black card if game doesn't have one.
        # # FIXME: Game setup. 
        # if not self.game_data['current_black_card']:
        #     self.game_data['current_black_card'] = self.game_data['black_deck'].pop()

        # self.write_player()